geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
theme_void()
ggplot()+
geom_sf(data = points_set_1, aes(color = id))+
geom_sf(data = points_set_2, aes(color = id))+
theme_void()
ggplot()+
geom_sf(data = points_set_1, aes(color = id))+
geom_sf(data = points_set_2, aes(fill = id))+
theme_void()
#--- plotting these two point sets ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
theme_void()
#--- create a buffer at 0.2 of point set 2 ---#
buffer_2 <- st_buffer(points_set_2, dist = 0.2)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "red")+
geom_sf(data = buffer_2)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "red")+
geom_sf(data = buffer_2, aes(fill = NA), color = "blue")+
theme_void()
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "blue")+
theme_void()
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf(data = buffer_2, fill = NA, color = "red")+
theme_void()
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+
theme_void()
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "black")+
geom_sf(data = buffer_2, fill = NA, color = "red")+
theme_void()
red
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+
theme_void()
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#--- Confirming visual result in matrix ---#
st_is_within_distance(points_set_1, buffer_2)
#--- Confirming visual result in matrix ---#
st_is_within_distance(points_set_1, points_set_2, dist = 0.2)
#--- create a buffer at 0.2 of point set 2 ---#
buffer_2 <- st_buffer(points_set_2, dist = 0.4)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#--- Confirming visual result in matrix ---#
st_is_within_distance(points_set_1, points_set_2, dist = 0.2)
#--- Confirming visual result in matrix ---#
st_is_within_distance(points_set_1, points_set_2, dist = 0.4)
#--- create a buffer at 0.2 of point set 2 ---#
buffer_2 <- st_buffer(points_set_2, dist = 0.3)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#--- create a buffer at 0.2 of point set 2 ---#
buffer_2 <- st_buffer(points_set_2, dist = 0.2)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#--- create a buffer at 0.2 of point set 2 ---#
buffer_2 <- st_buffer(points_set_2, dist = 0.1)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#--- Confirming visual result in matrix ---#
st_is_within_distance(points_set_1, points_set_2, dist = 0.4)
#--- Confirming visual result in matrix ---#
st_is_within_distance(points_set_1, points_set_2, dist = 0.1)
#--- create a buffer at 0.2 of point set 2 ---#
buffer_2 <- st_buffer(points_set_2, dist = 0.2)
#--- plot everything in one graph ---#
ggplot()+
geom_sf_text(data = points_set_1, aes(label = id), color = "blue")+
geom_sf_text(data = points_set_2, aes(label = id), color = "red")+
geom_sf(data = buffer_2, fill = NA, color = "red")+theme_bw()
#===============================================================================
#--- Spatial Cropping ----
#--- data preparation ---#
#--- Kansas county borders ---#
KS_counties <-
readRDS("Data/Chapter 3/KS_county_borders.rds") %>%
st_transform(32614)
#===============================================================================
#--- Spatial Cropping ----
#--- data preparation ---#
#--- Kansas county borders ---#
KS_counties <-
readRDS("Data/Chapter 3/KS_county_borders.rds") %>%
st_crs(432614)
#===============================================================================
#--- Spatial Cropping ----
#--- data preparation ---#
#--- Kansas county borders ---#
KS_counties <-
readRDS("Data/Chapter 3/KS_county_borders.rds") %>%
sf::st_transform(32614)
#--- High-Plains Aquifer boundary ---#
hpa <-
sf::st_read("Data/Chapter 3/hp_bound2010.shp") %>%
.[1, ] %>%
sf::st_transform(st_crs(KS_counties))
#--- all the irrigation wells in KS ---#
KS_wells <-
readRDS("Data/Chapter 3/Kansas_wells.rds") %>%
sf::st_transform(st_crs(KS_counties))
#--- US railroads in the Mid West region ---#
rail_roads_mw <- sf::st_read("Data/Chapter 3/mw_railroads.geojson")
#===============================================================================
#--- Bounding box ----
#--- get the bounding box of KS_wells ---#
(
bbox_KS_wells <- sf::st_bbox(KS_wells)
)
#--- check the class ---#
class(bbox_KS_wells)
# converting the bbox into sfc ---#
KS_wells_bbox_sfc <- sf::st_as_sfc(bbox_KS_wells)
plot(KS_wells_bbox_sfc)
plot(KS_counties)
plot(KS_wells)
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = bbox_KS_wells, color = "red")
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = bbox_KS_wells, aes(color = "red"))
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, aes(color = "red"))
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, aes(color = "red", fill = NA))
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA)
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA, linewidth = 2 )+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA, linewidth = 0.5 )+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 1)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 0.5)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 0.01)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 0.5)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = hpa)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 0.5)+
theme_void()
ggplot()+
geom_sf(data = hpa, color = "blue", alpha = 0.2)
ggplot()+
geom_sf(data = hpa, fill = "blue", alpha = 0.2)+
geom_sf(KS_wells, color = "black", size = 0.8)+
theme_void()
ggplot()+
geom_sf(data = hpa, fill = "blue", alpha = 0.2)+
geom_sf(KS_wells, aes(color = "black"), size = 0.8)+
theme_void()
ggplot()+
geom_sf(data = hpa, aes(fill = "blue"), alpha = 0.2)+
geom_sf(KS_wells, aes(color = "black"), size = 0.8)+
theme_void()
ggplot()+
geom_sf(data = hpa, aes(fill = "blue", alpha = 0.2))+
geom_sf(KS_wells, aes(color = "black", size = 0.8))+
theme_void()
ggplot()+
geom_sf(data = hpa, aes(fill = "blue", alpha = 0.2))+
geom_sf(data = KS_wells, aes(color = "black", size = 0.8))+
theme_void()
ggplot()+
geom_sf(data = hpa, fill = "blue", alpha = 0.2)+
geom_sf(data = KS_wells, color = "black", size = 0.5)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = hpa)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 0.5)+
theme_void()
#--- plotting the bbox and wells data ---#
ggplot()+
geom_sf(data = KS_wells_bbox_sfc, color = "red", fill = NA,
linewidth = 0.5 )+
geom_sf(data = KS_wells, size = 0.5)+
theme_void()
#--- Cropping data using st_crop function ----
#--- crop hpa data to ks_wells data ---#
hpa_cropped_wells <- st_crop(hpa, KS_wells)
#plot the cropped data
plot(hpa_cropped_wells)
#--- plot everything again ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.3)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", linewidth = 0.5,
fill = NA)+
geom_sf(data = KS_wells, size = 0.8, color = "black")+
theme_void()
#--- plot everything again ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.3)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", linewidth = 0.5,
fill = NA)+
geom_sf(data = KS_wells, size = 0.8, color = "black")+
theme_void()+
labs(
title = "The bounding box of the irrigation wells in Kansas that overlie HPA"
)+
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
#--- plot everything again ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.3)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", linewidth = 0.5,
fill = NA)+
geom_sf(data = KS_wells, size = 0.8, color = "black")+
theme_void()+
labs(
caption = "The bounding box of the irrigation wells in Kansas that overlie HPA"
)+
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
#--- plot everything again ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.3)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", linewidth = 0.5,
fill = NA)+
geom_sf(data = KS_wells, size = 0.8, color = "black")+
theme_void()+
labs(
caption = "The bounding box of the irrigation wells in Kansas that overlie HPA"
)+
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
#--- plot everything again ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.3)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", linewidth = 0.5,
fill = NA)+
geom_sf(data = KS_wells, size = 0.8, color = "black")+
theme_void()+
labs(
caption = "The bounding box of the irrigation wells in Kansas that overlie HPA"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "bold")
)
#--- plot everything again ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.3)+
geom_sf(data = KS_wells_bbox_sfc, color = "red", linewidth = 0.5,
fill = NA)+
geom_sf(data = KS_wells, size = 0.8, color = "black")+
theme_void()+
labs(
caption = "The bounding box of the irrigation wells in Kansas that overlie HPA"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic")
)
#===============================================================================
#--- Spatial Sub-setting ----
#--- plot KS county, cropped HPA in one graph ---#
ggplot()+
geom_sf(data = KS_counties)
#===============================================================================
#--- Spatial Sub-setting ----
#--- plot KS county, cropped HPA in one graph ---#
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()
#===============================================================================
#--- Spatial Sub-setting ----
#--- plot KS county, cropped HPA in one graph ---#
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "Kansas portion of High-Plains Aquifer and Kansas counties"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic")
)
#--- pull the hpa intersection KS counties only ---#
hpa_intersecting_county <- KS_counties[hpa_cropped_wells,]
#--- plot the hpa intersecting counties ---#
plot(hpa_intersecting_county)
#--- plot the hpa intersecting counties ---#
ggplot(hpa_intersecting_county)+
geom_sf()
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "Kansas counties on HPA"
)+
theme(
plot.caption = element_text(hjust = 0.5, face= "italic")
)
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "The results of spatially subsetting Kansas counties based on HPA boundary"
)+
theme(
plot.caption = element_text(hjust = 0.5, face= "italic")
)
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "The results of spatially subsetting Kansas counties based on HPA boundary"
)+
theme(
plot.caption = element_text(hjust = 0.5, face= "italic", size = 12)
)
#===============================================================================
#--- Spatial Sub-setting ----
#--- plot KS county, cropped HPA in one graph ---#
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "Kansas portion of High-Plains Aquifer and Kansas counties"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic",size = 10)
)
#===============================================================================
#--- Spatial Sub-setting ----
#--- plot KS county, cropped HPA in one graph ---#
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "Kansas portion of High-Plains Aquifer and Kansas counties"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic",size = 12)
)
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "The results of spatially subsetting Kansas counties based on HPA boundary"
)+
theme(
plot.caption = element_text(hjust = 0.5, face= "italic", size = 12)
)
View(hpa_intersecting_county)
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
geom_point(data = hpa_intersecting_county$AWATER)+
theme_void()+
labs(
caption = "The results of spatially subsetting Kansas counties based on HPA boundary"
)+
theme(
plot.caption = element_text(hjust = 0.5, face= "italic", size = 12)
)
plot(hpa_intersecting_county$AWATER)
plot(hpa_intersecting_county)
plot(hpa_intersecting_county)%>%select(AWATER)
plot(hpa_intersecting_county)%>%filter(AWATER)
hpa_intersecting_county %>%
plot(AWATER)
hpa_intersecting_county %>%
plot(select(AWATER))
#--- plot the hpa intersecting counties ---#
ggplot()+
geom_sf(data = hpa_intersecting_county, fill = NA)+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
theme_void()+
labs(
caption = "The results of spatially subsetting Kansas counties based on HPA boundary"
)+
theme(
plot.caption = element_text(hjust = 0.5, face= "italic", size = 12)
)
#--- idenitfy completey colvered KS counties ---#
counties_within_hpa <- KS_counties[hpa_cropped_to_KS, op = st_within]
#--- idenitfy completey colvered KS counties ---#
counties_within_hpa <- KS_counties[hpa_cropped_wells, op = st_within]
#--- plot complete counties only ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, color = "blue", alpha = 0.2)+
geom_sf(data = counties_within_hpa, color = "black", fill = NA)+
theme_void()
#--- plot complete counties only ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.2)+
geom_sf(data = counties_within_hpa, color = "black", fill = NA)+
theme_void()
#--- plot complete counties only ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.1)+
geom_sf(data = counties_within_hpa, color = "black", fill = NA)+
theme_void()
#--- plot complete counties only ---#
ggplot()+
geom_sf(data = hpa_cropped_wells, fill = "blue", alpha = 0.1)+
geom_sf(data = counties_within_hpa, color = "black", fill = NA)+
theme_void()+
labs(
caption = "Counties completely within the HPA Area"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic", size = 12)
)
