theme_void()
#plot the data
ggplot()+
geom_sf(data = KS_corn_price, fill = KS_corn_price$corn_price)+
scale_fill_viridis_c() +
theme_void()
#plot the data
ggplot()+
geom_sf(data = KS_corn_price, aes(fill = corn_price))+
scale_fill_viridis_c() +
theme_void()
# now we need to join wells data with price data
KS_wells_price <- st_join(KS_wells, KS_corn_price)
plot(KS_wells_price)
#now plot the final thing again
ggplot(KS_wells_price)+
geom_sf(aes(color = corn_price))+
geom_sf(data = KS_counties, fill = NA, color = "black")+
theme_void()+
scale_fill_viridis_c()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
geom_sf(data = KS_counties, fill = NA, color = "black")+
theme_void()+
scale_fill_viridis_c()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties, fill = NA, color = "black")+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
theme_void()+
scale_fill_viridis_c()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties, fill = NA, color = "black")+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
theme_void()+
scale_fill_viridis_c()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
theme_void()+
scale_fill_viridis_c()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
scale_fill_viridis_c()+
theme_void()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(fill = corn_price))+
scale_fill_viridis_c()+
theme_void()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
scale_fill_viridis_c()+
theme_void()
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
scale_fill_viridis_c()+
theme_void()+
labs(
caption = "Map of wells color-differentiated by corn price"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic", size = 12)
)
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
scale_fill_viridis_c()+
theme_void()+
labs(
caption = "Map of wells color-differentiated by corn price",
color = "Corn Price"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic", size = 12)
)
#---Case 2: polygons (target) vs points (source)---#
#--- spatial join ---#
KS_County_wells <- sf::st_join(KS_counties, KS_wells)
#--- take a look ---#
dplyr::select(KS_County_wells, COUNTYFP, site, af_used)
#summarizing the data
KS_County_wells %>%
dplyr::group_by(COUNTYFP) %>%
dplyr::summarize(af_used = sum(af_used, na.rm = TRUE))
View(KS_County_wells)
#plot the data
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_County_wells, aes(color = af_used))+
theme_void()
#plot the data
ggplot()+
geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(color = af_used))+
theme_void()
#plot the data
ggplot()+
geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(fill = af_used))+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(color = af_used))+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(color = af_used))+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, color = af_used)+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, color = KS_County_wells$af_used)+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, fill = KS_County_wells$af_used)+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(fill = KS_County_wells$af_used))+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(fill =af_used))+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot()+
#geom_sf(data = KS_counties, fill = NA)+
geom_sf(data = KS_County_wells, aes(fill =af_used))+
scale_fill_viridis_a()+
theme_void()
#plot the data
ggplot() +
geom_sf(data = KS_counties) +
geom_sf(data = KS_wells, aes(color = af_used), size = 0.2) +
scale_color_viridis_c(name = "Groundwater Pumping (acre-feet)") +
theme_void() +
theme(legend.position = "bottom")
plot(KS_County_wells)
#plot the data
ggplot() +
geom_sf(data = KS_counties) +
geom_sf(data = KS_wells, aes(color = af_used), size = 0.2) +
scale_color_viridis_c(name = "Groundwater Pumping (acre-feet)") +
theme_void() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold"))+
labs(
title = "Map of wells color-differentiated by corn price"
)
#---Case 3: polygons (target) vs polygons (source)---#
#load Iowa corn data
IA_corn <- readRDS("Data/Chapter 3/IA_corn.rds")
IA_corn
#make a plot of counties color based on corn acres
ggplot(IA_corn)+
geom_sf(aes(color = acres))+
scale_fill_viridis_c()+
theme_void()
#make a plot of counties color based on corn acres
ggplot(IA_corn)+
geom_sf(aes(fill = acres))+
scale_fill_viridis_c()+
theme_void()
#make a plot of counties color based on corn acres
ggplot(IA_corn)+
geom_sf(aes(fill = acres))+
scale_fill_viridis_c(name = "Corn Acarage")+
theme_void()
#make a plot of counties color based on corn acres
ggplot(IA_corn)+
geom_sf(aes(fill = acres))+
scale_fill_viridis_c(name = "Corn Acreage")+
theme_void()+
labs(
caption = "Map of Iowa counties color-differentiated by corn planted acreage"
)+
theme(
plot.title = element_text(hjust = 0.5, face = "italic", size = 12)
)
#make a plot of counties color based on corn acres
ggplot(IA_corn)+
geom_sf(aes(fill = acres))+
scale_fill_viridis_c(name = "Corn Acreage")+
theme_void()+
labs(
caption = "Map of Iowa counties color-differentiated by corn planted acreage"
)+
theme(
plot.caption  = element_text(hjust = 0.5, face = "italic", size = 12)
)
#make a plot of counties color based on corn acres
ggplot(IA_corn)+
geom_sf(aes(fill = acres))+
scale_fill_viridis_c(name = "Corn Acreage")+
theme_void()+
labs(
caption = "Map of Iowa counties color-differentiated by corn planted acreage"
)+
theme(
plot.caption  = element_text(hjust = 0.7, face = "italic", size = 12)
)
#import HUC units
HUC_IA <-
sf::st_read("Data/huc250k.shp") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.shp") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.shp.xml") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.shx") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.shp") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.dbf") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.shp") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/hp_bound2010.shp") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
#import HUC units
HUC_IA <-
sf::st_read("Data/Chapter 3/huc250k.shp") %>%
dplyr::select(HUC_CODE) %>%
#--- reproject to the CRS of IA ---#
sf::st_transform(st_crs(IA_corn)) %>%
#--- select HUC units that overlaps with IA ---#
.[IA_corn, ]
ggplot(HUC_IA) +
geom_sf() +
theme_void()
#plot the corn data on huc map
ggplot()+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.2)+
#plot the corn data on huc map
ggplot()+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.2)+
theme_void()
#plot the corn data on huc map
ggplot(HUC_IA)+
#geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.2)+
theme_void()
#plot the corn data on huc map
ggplot(HUC_IA)+
#geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres, alpha = 0.2))+
theme_void()
#plot the corn data on huc map
ggplot(HUC_IA)+
#geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.2)+
theme_void()
#plot the corn data on huc map
ggplot(HUC_IA)+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.2)+
theme_void()
#plot the corn data on huc map
ggplot(HUC_IA)+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.4)+
theme_void()
#plot the corn data on huc map
ggplot()+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.4)+
scale_fill_viridis_c()
#plot the corn data on huc map
ggplot()+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.4)+
scale_fill_viridis_c()+
theme_void()
#plot the corn data on huc map
ggplot()+
geom_sf(data = HUC_IA)+
geom_sf(data = IA_corn, aes(fill = acres), alpha = 0.4)+
scale_fill_viridis_c()+
theme_void()+
labs(
caption = "Map of HUC units superimposed on the counties in Iowas"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic", size = 12)
)
#now join the two data sets
IA_huc_corn <- st_join(IA_corn, HUC_IA)
ggplot()+
geom_sf(data = IA_huc_corn)
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))
#now join the two data sets
IA_huc_corn <- st_join(HUC_IA, IA_corn)
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_viridis_c(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_gradient(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_gradientn(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_gradient2(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_viridis_d(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_viridis_b(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_viridis_c(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_color_jco(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_jco(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_lancet(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_hue(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_manual(name = "Acres")+
theme_void()
ggplot()+
geom_sf(data = IA_huc_corn, aes(fill = acres))+
scale_fill_viridis_c(name = "Acres")+
theme_void()
#filer one region
#--- get the HUC unit with `HUC_CODE ==10170203`  ---#
(
temp_HUC_county <- filter(IA_huc_corn, HUC_CODE == 10170203)
)
#plot the region
temp_HUC_county %>%
dplyr::mutate(county_text = paste0("County Code: ", county_code)) %>%
ggplot(.) +
geom_sf() +
facet_wrap(county_text ~ ., nrow = 2) +
theme_void()
#more advanced way to summarize data by county
#--- sum ---#
aggregate(KS_wells, KS_counties, FUN = sum)
#more advanced way to summarize data by county
#--- sum ---#
aggregate(dplyr::select(KS_wells, af_used), KS_counties, FUN = sum)
#more advanced way to summarize data by county
#--- sum ---#
data <- aggregate(dplyr::select(KS_wells, af_used), KS_counties, FUN = sum)
ggplot()+
geom_sf(data = data)
ggplot()+
geom_sf(data = data, aes(fill = af_used))+
scale_fill_viridis_c()+
theme_void()
#plot the data
ggplot() +
geom_sf(data = KS_counties) +
geom_sf(data = KS_wells, aes(color = af_used), size = 0.2) +
scale_color_viridis_c(name = "Groundwater Pumping (acre-feet)") +
theme_void() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, face = "bold"))+
labs(
title = "Map of wells color-differentiated by corn price"
)
#now plot the final thing again
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells_price, aes(color = corn_price))+
scale_fill_viridis_c()+
theme_void()+
labs(
caption = "Map of wells color-differentiated by corn price",
color = "Corn Price"
)+
theme(
plot.caption = element_text(hjust = 0.5, face = "italic", size = 12)
)
#plot the data
ggplot()+
geom_sf(data = KS_corn_price, aes(fill = corn_price))+
scale_fill_viridis_c() +
theme_void()
ggplot()+
geom_sf(data = data, aes(fill = af_used))+
scale_fill_viridis_c()+
theme_void()
ggplot()+
geom_sf(data = data, aes(color = af_used))+
scale_fill_viridis_c()+
theme_void()
ggplot()+
geom_sf(data = data, aes(color = af_used))+
theme_void()
ggplot()+
geom_sf(data = KS_wells, aes(color = af_used))+
theme_void()
ggplot()+
geom_sf(data = KS_wells, aes(color = af_used))+
geom_sf(data = KS_counties)+
theme_void()
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = KS_wells, aes(color = af_used))+
theme_void()
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = data, aes(color = af_used))+
theme_void()
ggplot()+
geom_sf(data = KS_counties)+
geom_sf(data = data, aes(fill = af_used))+
theme_void()
